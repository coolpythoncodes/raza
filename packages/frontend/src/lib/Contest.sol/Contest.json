{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "title", "type": "string", "internalType": "string" },
        { "name": "description", "type": "string", "internalType": "string" },
        {
          "name": "entryStartTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "entryEndTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "votingStartTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "votingEndTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "organizer", "type": "address", "internalType": "address" },
        {
          "name": "maxEntriesPerParticipant",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "maxTotalEntries",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "numberOfWinners",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cancelContest",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "computeWinners",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deleteEntry",
      "inputs": [
        { "name": "entryId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAllEntryIds",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getContestDetails",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Contest.ContestDetails",
          "components": [
            { "name": "title", "type": "string", "internalType": "string" },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "entryStartTime",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "entryEndTime",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "votingStartTime",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "votingEndTime",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "organizer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "maxTotalEntries",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxEntriesPerParticipant",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "totalVotes",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getContestStatus",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum Contest.ContestStatus"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDeletedEntryIDs",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEntry",
      "inputs": [
        { "name": "entryId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "entry",
          "type": "tuple",
          "internalType": "struct Contest.ParticipantEntry",
          "components": [
            {
              "name": "participant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "content", "type": "string", "internalType": "string" },
            { "name": "exists", "type": "bool", "internalType": "bool" },
            {
              "name": "numberOfVotes",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getHasVoted",
      "inputs": [
        { "name": "voter", "type": "address", "internalType": "address" },
        { "name": "entryId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWinners",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "s_allEntryIds",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_deletedEntryIds",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_description",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_entryEndTime",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_entryStartTime",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_isCanceled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_maxEntriesPerParticipant",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_maxTotalEntries",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_numberOfWinners",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_organizer",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_participantEntryCount",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_title",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_totalVotes",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_votingEndTime",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_votingStartTime",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "s_winnersComputed",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "submitEntry",
      "inputs": [
        { "name": "content", "type": "string", "internalType": "string" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "vote",
      "inputs": [
        { "name": "entryId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Contest__ContestCanceled",
      "inputs": [],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Contest__EntrySubmitted",
      "inputs": [
        {
          "name": "entryId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "participant",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "entry",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EntryDeleted",
      "inputs": [
        {
          "name": "entryId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VoteCast",
      "inputs": [
        {
          "name": "voter",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "entryId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "Contest__AlreadyCanceled", "inputs": [] },
    { "type": "error", "name": "Contest__AlreadyVotedForEntry", "inputs": [] },
    {
      "type": "error",
      "name": "Contest__CannotDeleteEntryAfterContestEndedOrCanceled",
      "inputs": []
    },
    { "type": "error", "name": "Contest__ContestNotEnded", "inputs": [] },
    { "type": "error", "name": "Contest__EntryAlreadyExists", "inputs": [] },
    {
      "type": "error",
      "name": "Contest__ExceededEntryLimit",
      "inputs": [
        {
          "name": "numAllowedEntrySubmissions",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "Contest__ExceededTotalMaxEntryLimit",
      "inputs": [
        {
          "name": "maxTotalEntries",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "Contest__InvalidOrDeletedEntry",
      "inputs": [
        { "name": "entryId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "Contest__NotEnoughEntries", "inputs": [] },
    { "type": "error", "name": "Contest__NotInVotingPhase", "inputs": [] },
    {
      "type": "error",
      "name": "Contest__NotOpenForParticipants",
      "inputs": []
    },
    { "type": "error", "name": "Contest__NotOrganizer", "inputs": [] },
    { "type": "error", "name": "Contest__WinnerNotComputed", "inputs": [] },
    {
      "type": "error",
      "name": "Contest__WinnersAlreadyComputed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60806040523461040c57611a738038038061001981610411565b9283398101906101408183031261040c5780516001600160401b03811161040c5782610046918301610436565b602082015190926001600160401b03821161040c57610066918301610436565b9060408101516060820151608083015160a08401519160c08501519360018060a01b03851680950361040c5760e0860151966101206101008801519701519886156103f657600080546001600160a01b031981168917825588916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a38051906001600160401b0382116102f35760015490600182811c921680156103ec575b60208310146102d35781601f84931161037c575b50602090601f831160011461031457600092610309575b50508160011b916000199060031b1c1916176001555b8051906001600160401b0382116102f35760025490600182811c921680156102e9575b60208310146102d35781601f849311610263575b50602090601f83116001146101fb576000926101f0575b50508160011b916000199060031b1c1916176002555b600355600455600555600655600780546001600160a01b031916919091179055600855600b55600c556040516115d190816104a28239f35b0151905038806101a2565b600260009081528281209350601f198516905b81811061024b5750908460019594939210610232575b505050811b016002556101b8565b015160001960f88460031b161c19169055388080610224565b9293602060018192878601518155019501930161020e565b60026000529091507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace601f840160051c810191602085106102c9575b90601f859493920160051c01905b8181106102ba575061018b565b600081558493506001016102ad565b909150819061029f565b634e487b7160e01b600052602260045260246000fd5b91607f1691610177565b634e487b7160e01b600052604160045260246000fd5b01519050388061013e565b600160009081528281209350601f198516905b818110610364575090846001959493921061034b575b505050811b01600155610154565b015160001960f88460031b161c1916905538808061033d565b92936020600181928786015181550195019301610327565b60016000529091507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f840160051c810191602085106103e2575b90601f859493920160051c01905b8181106103d35750610127565b600081558493506001016103c6565b90915081906103b8565b91607f1691610113565b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102f357604052565b81601f8201121561040c578051906001600160401b0382116102f357610465601f8301601f1916602001610411565b928284526020838301011161040c5760005b82811061048c57505060206000918301015290565b8060208092840101518282870101520161047756fe6080604052600436101561001257600080fd5b60003560e01c80630121b93f14610f9c578063057c106c14610f625780630eeb67a114610f4457806311f7516c14610e7f5780631366e20014610e615780631b9efecd14610e075780631d19a7cb14610cb15780631db0e66714610c70578063221705ea14610a055780632b00cd641461064f5780634ef897191461063357806354ab50b1146105e157806356c106b8146105c357806367787a51146105a05780636989641c1461055e5780636be7455d14610540578063715018a6146104e75780637bd37dfc1461048d5780637f80667e1461046f5780638da5cb5b146104465780638f97094c1461040e578063922ce146146103eb57806399a8502d146103bb5780639c24209414610392578063aefaca7f14610374578063ba9b975814610356578063bae78d7b146102f0578063df15c37e1461026a578063e02c30091461024c578063f2fde38b146101c35763f40d6c1c1461017157600080fd5b346101be5760403660031901126101be576001600160a01b036101926110ce565b1660005260116020526040600020602435600052602052602060ff604060002054166040519015158152f35b600080fd5b346101be5760203660031901126101be576101dc6110ce565b6101e4611551565b6001600160a01b0316801561023657600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101be5760003660031901126101be576020601354604051908152f35b346101be5760003660031901126101be5760ff600d5416156102df57604051600e548082526020820190600e60005260206000209060005b8181106102c9576102c5856102b9818703826111d2565b604051918291826110e4565b0390f35b82548452602090930192600192830192016102a2565b63cd28fdcd60e01b60005260046000fd5b346101be5760203660031901126101be5761030c600435611446565b60405180916020825260018060a01b038151166020830152606061033f60208301516080604086015260a085019061111e565b916040810151151582850152015160808301520390f35b346101be5760003660031901126101be576020600854604051908152f35b346101be5760003660031901126101be576020600454604051908152f35b346101be5760003660031901126101be576007546040516001600160a01b039091168152602090f35b346101be5760003660031901126101be576102c56103d76111f4565b60405191829160208352602083019061111e565b346101be5760003660031901126101be57602060ff601254166040519015158152f35b346101be5760203660031901126101be576004356009548110156101be57610437602091611344565b90549060031b1c604051908152f35b346101be5760003660031901126101be576000546040516001600160a01b039091168152602090f35b346101be5760003660031901126101be576020600354604051908152f35b346101be5760003660031901126101be57604051600a548082526020820190600a60005260206000209060005b8181106104d1576102c5856102b9818703826111d2565b82548452602090930192600192830192016104ba565b346101be5760003660031901126101be57610500611551565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101be5760003660031901126101be576020600654604051908152f35b346101be5760003660031901126101be576105776113d5565b604051600582101561058a576020918152f35b634e487b7160e01b600052602160045260246000fd5b346101be5760003660031901126101be57602060ff600d54166040519015158152f35b346101be5760003660031901126101be576020600554604051908152f35b346101be5760203660031901126101be57600435600a548110156101be57600090600a5481101561061f57602082600a829452200154604051908152f35b634e487b7160e01b82526032600452602482fd5b346101be5760003660031901126101be576102c56103d76112ad565b346101be5760203660031901126101be5760043567ffffffffffffffff81116101be57366023820112156101be57806004013567ffffffffffffffff81116101be57602482019160248236920101116101be576106aa6113d5565b600581101561058a576001036109f45733600052600f602052604060002054600b54809110156109e057506106e4600954600a549061138d565b600854809110156109cc575060405160208101903382526040808201526107218161071360608201868861157a565b03601f1981018352826111d2565b5190209081600052601060205260ff600260406000200154166109bb5760405161074a816111b6565b3381526000906040516107676020601f19601f87011601826111d2565b83815283866020830137826020858301015260208201908152604082016001815260608301918483528685526010602052604085209360018060a01b039051166bffffffffffffffffffffffff60a01b85541617845560018401905180519067ffffffffffffffff82116109a7576107df835461115f565b601f8111610962575b50602090601f83116001146108fb57600395949392918891836108f0575b50508160011b9160001990871b1c19161790555b600284019051151560ff8019835416911617905551910155338152600f6020526040812061084881546113c6565b905560095490600160401b8210156108dc5750927f30867471f2b0dd27926494361d6960d2bd1e0883a19d02b003cbb881b6a53ac6916108af84610896876001602099016009556009611375565b90919082549060031b91821b91600019901b1916179055565b6108d1604051928392868452338885015260606040850152606084019161157a565b0390a1604051908152f35b634e487b7160e01b81526041600452602490fd5b015190508b80610806565b8388528188209190601f198416895b81811061094a57509160019391856003999897969410610932575b505050811b01905561081a565b015160001983891b60f8161c191690558b8080610925565b9293602060018192878601518155019501930161090a565b83885260208820601f840160051c8101916020851061099d575b601f0160051c01905b81811061099257506107e8565b888155600101610985565b909150819061097c565b634e487b7160e01b87526041600452602487fd5b63016a781960e41b60005260046000fd5b63147cabfd60e11b60005260045260246000fd5b63274ef60760e11b60005260045260246000fd5b6329048ad560e21b60005260046000fd5b346101be5760003660031901126101be57610a1e6113d5565b600581101561058a57600403610c5f5760ff600d5416610c4e57600954610a47600a548261138d565b90600c54809210610c3e57610a5b8161139a565b91610a6960405193846111d2565b818352601f19610a788361139a565b01366020850137600091825b818110610bec5750506000905b6000198301838111610b4e57821015610b6f5760005b610ab1838561138d565b6000198101908111610b4e57811015610b6457610ace81866113b2565b5160005260106020526003604060002001549060018101808211610b4e57600192610af982896113b2565b51600052601060205260036040600020015411610b18575b5001610aa7565b6000610b3c610b27838a6113b2565b5192610b33858b6113b2565b519250896113b2565b52610b4782886113b2565b5286610b11565b634e487b7160e01b600052601160045260246000fd5b509060010190610a91565b91905080821015610be45750905b60005b828110610b9657600d805460ff19166001179055005b610ba081836113b2565b5190600e54600160401b811015610bce576001926108968285610bc89401600e55600e611375565b01610b80565b634e487b7160e01b600052604160045260246000fd5b905090610b7d565b610bf581611344565b90549060031b1c80600052601060205260ff60026040600020015416610c1f575b50600101610a84565b84610c3791610c3160019497896113b2565b526113c6565b9390610c16565b629d3eb960e61b60005260046000fd5b632c91e27f60e11b60005260046000fd5b63af3c91e560e01b60005260046000fd5b346101be5760003660031901126101be57610c89611551565b60125460ff8116610ca05760ff1916600117601255005b6355840de560e01b60005260046000fd5b346101be5760003660031901126101be576000610120604051610cd381611199565b60608152606060208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152610140602060035460045460055460065460018060a01b036007541660085491600b549360135495610dc6604051610d4281611199565b610d4a6111f4565b8152610db3610d576112ad565b918c8101928352604081019b8c52606081019485526080810195865260a0810196875260c0810197885260e081019889526101008101998a5261012081019a8b526040519d8d8f9e928f938452519201526101608d019061111e565b90518b8203601f190160408d015261111e565b975160608a01525160808901525160a08801525160c0870152516001600160a01b031660e08601525161010085015251610120840152516101408301520390f35b346101be5760003660031901126101be576040516009548082526020820190600960005260206000209060005b818110610e4b576102c5856102b9818703826111d2565b8254845260209093019260019283019201610e34565b346101be5760003660031901126101be576020600c54604051908152f35b346101be5760203660031901126101be57600435610e9b611551565b610ea36113d5565b600581101561058a5760048114908115610f39575b50610f2857806000526010602052600260406000200160ff198154169055600a54600160401b811015610bce5781610f1f7f9ad2ca3ec51dc768a93a3a6f7b5778dd0e5f4d4ba47a19df55a0a9a325bcdecb9361089684600160209601600a55600a611375565b604051908152a1005b636edabdcf60e01b60005260046000fd5b600391501482610eb8565b346101be5760003660031901126101be576020600b54604051908152f35b346101be5760203660031901126101be576001600160a01b03610f836110ce565b16600052600f6020526020604060002054604051908152f35b346101be5760203660031901126101be57600435610fb86113d5565b600581101561058a576002036110bd57610fd181611446565b80516001600160a01b0316159081156110b0575b5061109c5733600052601160205260406000208160005260205260ff6040600020541661108b5760407fa36cc2bebb74db33e9f88110a07ef56e1b31b24b4c4f51b54b1664266e29f45b91336000526011602052816000208160005260205281600020600160ff1982541617905561105e6013546113c6565b6013558060005260106020526003826000200161107b81546113c6565b90558151903382526020820152a1005b631022d3b360e01b60005260046000fd5b637995743160e01b60005260045260246000fd5b6040915001511582610fe5565b63617150fd60e11b60005260046000fd5b600435906001600160a01b03821682036101be57565b602060408183019282815284518094520192019060005b8181106111085750505090565b82518452602093840193909201916001016110fb565b919082519283825260005b84811061114a575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201611129565b90600182811c9216801561118f575b602083101461117957565b634e487b7160e01b600052602260045260246000fd5b91607f169161116e565b610140810190811067ffffffffffffffff821117610bce57604052565b6080810190811067ffffffffffffffff821117610bce57604052565b90601f8019910116810190811067ffffffffffffffff821117610bce57604052565b60405190600082600154916112088361115f565b808352926001811690811561128e575060011461122e575b61122c925003836111d2565b565b506001600090815290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b81831061127257505090602061122c92820101611220565b602091935080600191548385890101520191019091849261125a565b6020925061122c94915060ff191682840152151560051b820101611220565b60405190600082600254916112c18361115f565b808352926001811690811561128e57506001146112e45761122c925003836111d2565b506002600090815290917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b81831061132857505090602061122c92820101611220565b6020919350806001915483858901015201910190918492611310565b60095481101561135f57600960005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b805482101561135f5760005260206000200190600090565b91908203918211610b4e57565b67ffffffffffffffff8111610bce5760051b60200190565b805182101561135f5760209160051b010190565b6000198114610b4e5760010190565b60ff6012541661144157600354421061143c576004544211156114375760045442118061142b575b8061141f575b61141a57600654421161141557600090565b600490565b600290565b50600654421115611403565b506005544210156113fd565b600190565b600090565b600390565b60006060604051611456816111b6565b82815281602082015282604082015201526000526010602052604060002090604051611481816111b6565b82546001600160a01b0316815260405160018401805460009592916114a58261115f565b808452916001811690811561152a57506001146114ed575b50506114cf81600394959603826111d2565b602084015260ff600282015416151560408401520154606082015290565b90955060005260206000206000905b8682106115145750810160200194506114cf816114bd565b60018160209254838587010152019101906114fc565b60ff191660208086019190915292151560051b840190920196506114cf91508290506114bd565b6000546001600160a01b0316330361156557565b63118cdaa760e01b6000523360045260246000fd5b908060209392818452848401376000828201840152601f01601f191601019056fea2646970667358221220957b25c49b43705132dce9cb06d305d6f69b12a795b6771456b645a40dadac8664736f6c634300081a0033",
    "sourceMap": "380:13081:28:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:26:24;;;1269:95;;-1:-1:-1;380:13081:28;;-1:-1:-1;;;;;;380:13081:28;;;;;;;;-1:-1:-1;;;;;380:13081:28;;;;3052:40:24;;-1:-1:-1;3052:40:24;380:13081:28;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;380:13081:28;;;;4144:27;380:13081;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;;;;;;;;;;;;4144:27;380:13081;;4181:33;380:13081;4224:29;380:13081;4263:35;380:13081;4308:31;380:13081;4349:23;380:13081;;-1:-1:-1;;;;;;380:13081:28;;;;;;;4382:35;380:13081;4427:53;380:13081;4490:35;380:13081;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;4144:27;-1:-1:-1;380:13081:28;;;;;;;-1:-1:-1;;;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;;;4144:27;380:13081;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4144:27;-1:-1:-1;380:13081:28;;;-1:-1:-1;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;-1:-1:-1;380:13081:28;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;-1:-1:-1;380:13081:28;;;;;-1:-1:-1;380:13081:28;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;-1:-1:-1;380:13081:28;;;;;-1:-1:-1;380:13081:28;;;;;;-1:-1:-1;380:13081:28;;;;;;;-1:-1:-1;;;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;-1:-1:-1;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;-1:-1:-1;380:13081:28;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;;;;1269:95:24;1322:31;;;-1:-1:-1;1322:31:24;-1:-1:-1;1322:31:24;380:13081:28;;-1:-1:-1;1322:31:24;380:13081:28;-1:-1:-1;380:13081:28;;;;;;;;;-1:-1:-1;;380:13081:28;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;-1:-1:-1;;380:13081:28;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;;-1:-1:-1;380:13081:28;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b60003560e01c80630121b93f14610f9c578063057c106c14610f625780630eeb67a114610f4457806311f7516c14610e7f5780631366e20014610e615780631b9efecd14610e075780631d19a7cb14610cb15780631db0e66714610c70578063221705ea14610a055780632b00cd641461064f5780634ef897191461063357806354ab50b1146105e157806356c106b8146105c357806367787a51146105a05780636989641c1461055e5780636be7455d14610540578063715018a6146104e75780637bd37dfc1461048d5780637f80667e1461046f5780638da5cb5b146104465780638f97094c1461040e578063922ce146146103eb57806399a8502d146103bb5780639c24209414610392578063aefaca7f14610374578063ba9b975814610356578063bae78d7b146102f0578063df15c37e1461026a578063e02c30091461024c578063f2fde38b146101c35763f40d6c1c1461017157600080fd5b346101be5760403660031901126101be576001600160a01b036101926110ce565b1660005260116020526040600020602435600052602052602060ff604060002054166040519015158152f35b600080fd5b346101be5760203660031901126101be576101dc6110ce565b6101e4611551565b6001600160a01b0316801561023657600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101be5760003660031901126101be576020601354604051908152f35b346101be5760003660031901126101be5760ff600d5416156102df57604051600e548082526020820190600e60005260206000209060005b8181106102c9576102c5856102b9818703826111d2565b604051918291826110e4565b0390f35b82548452602090930192600192830192016102a2565b63cd28fdcd60e01b60005260046000fd5b346101be5760203660031901126101be5761030c600435611446565b60405180916020825260018060a01b038151166020830152606061033f60208301516080604086015260a085019061111e565b916040810151151582850152015160808301520390f35b346101be5760003660031901126101be576020600854604051908152f35b346101be5760003660031901126101be576020600454604051908152f35b346101be5760003660031901126101be576007546040516001600160a01b039091168152602090f35b346101be5760003660031901126101be576102c56103d76111f4565b60405191829160208352602083019061111e565b346101be5760003660031901126101be57602060ff601254166040519015158152f35b346101be5760203660031901126101be576004356009548110156101be57610437602091611344565b90549060031b1c604051908152f35b346101be5760003660031901126101be576000546040516001600160a01b039091168152602090f35b346101be5760003660031901126101be576020600354604051908152f35b346101be5760003660031901126101be57604051600a548082526020820190600a60005260206000209060005b8181106104d1576102c5856102b9818703826111d2565b82548452602090930192600192830192016104ba565b346101be5760003660031901126101be57610500611551565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101be5760003660031901126101be576020600654604051908152f35b346101be5760003660031901126101be576105776113d5565b604051600582101561058a576020918152f35b634e487b7160e01b600052602160045260246000fd5b346101be5760003660031901126101be57602060ff600d54166040519015158152f35b346101be5760003660031901126101be576020600554604051908152f35b346101be5760203660031901126101be57600435600a548110156101be57600090600a5481101561061f57602082600a829452200154604051908152f35b634e487b7160e01b82526032600452602482fd5b346101be5760003660031901126101be576102c56103d76112ad565b346101be5760203660031901126101be5760043567ffffffffffffffff81116101be57366023820112156101be57806004013567ffffffffffffffff81116101be57602482019160248236920101116101be576106aa6113d5565b600581101561058a576001036109f45733600052600f602052604060002054600b54809110156109e057506106e4600954600a549061138d565b600854809110156109cc575060405160208101903382526040808201526107218161071360608201868861157a565b03601f1981018352826111d2565b5190209081600052601060205260ff600260406000200154166109bb5760405161074a816111b6565b3381526000906040516107676020601f19601f87011601826111d2565b83815283866020830137826020858301015260208201908152604082016001815260608301918483528685526010602052604085209360018060a01b039051166bffffffffffffffffffffffff60a01b85541617845560018401905180519067ffffffffffffffff82116109a7576107df835461115f565b601f8111610962575b50602090601f83116001146108fb57600395949392918891836108f0575b50508160011b9160001990871b1c19161790555b600284019051151560ff8019835416911617905551910155338152600f6020526040812061084881546113c6565b905560095490600160401b8210156108dc5750927f30867471f2b0dd27926494361d6960d2bd1e0883a19d02b003cbb881b6a53ac6916108af84610896876001602099016009556009611375565b90919082549060031b91821b91600019901b1916179055565b6108d1604051928392868452338885015260606040850152606084019161157a565b0390a1604051908152f35b634e487b7160e01b81526041600452602490fd5b015190508b80610806565b8388528188209190601f198416895b81811061094a57509160019391856003999897969410610932575b505050811b01905561081a565b015160001983891b60f8161c191690558b8080610925565b9293602060018192878601518155019501930161090a565b83885260208820601f840160051c8101916020851061099d575b601f0160051c01905b81811061099257506107e8565b888155600101610985565b909150819061097c565b634e487b7160e01b87526041600452602487fd5b63016a781960e41b60005260046000fd5b63147cabfd60e11b60005260045260246000fd5b63274ef60760e11b60005260045260246000fd5b6329048ad560e21b60005260046000fd5b346101be5760003660031901126101be57610a1e6113d5565b600581101561058a57600403610c5f5760ff600d5416610c4e57600954610a47600a548261138d565b90600c54809210610c3e57610a5b8161139a565b91610a6960405193846111d2565b818352601f19610a788361139a565b01366020850137600091825b818110610bec5750506000905b6000198301838111610b4e57821015610b6f5760005b610ab1838561138d565b6000198101908111610b4e57811015610b6457610ace81866113b2565b5160005260106020526003604060002001549060018101808211610b4e57600192610af982896113b2565b51600052601060205260036040600020015411610b18575b5001610aa7565b6000610b3c610b27838a6113b2565b5192610b33858b6113b2565b519250896113b2565b52610b4782886113b2565b5286610b11565b634e487b7160e01b600052601160045260246000fd5b509060010190610a91565b91905080821015610be45750905b60005b828110610b9657600d805460ff19166001179055005b610ba081836113b2565b5190600e54600160401b811015610bce576001926108968285610bc89401600e55600e611375565b01610b80565b634e487b7160e01b600052604160045260246000fd5b905090610b7d565b610bf581611344565b90549060031b1c80600052601060205260ff60026040600020015416610c1f575b50600101610a84565b84610c3791610c3160019497896113b2565b526113c6565b9390610c16565b629d3eb960e61b60005260046000fd5b632c91e27f60e11b60005260046000fd5b63af3c91e560e01b60005260046000fd5b346101be5760003660031901126101be57610c89611551565b60125460ff8116610ca05760ff1916600117601255005b6355840de560e01b60005260046000fd5b346101be5760003660031901126101be576000610120604051610cd381611199565b60608152606060208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152610140602060035460045460055460065460018060a01b036007541660085491600b549360135495610dc6604051610d4281611199565b610d4a6111f4565b8152610db3610d576112ad565b918c8101928352604081019b8c52606081019485526080810195865260a0810196875260c0810197885260e081019889526101008101998a5261012081019a8b526040519d8d8f9e928f938452519201526101608d019061111e565b90518b8203601f190160408d015261111e565b975160608a01525160808901525160a08801525160c0870152516001600160a01b031660e08601525161010085015251610120840152516101408301520390f35b346101be5760003660031901126101be576040516009548082526020820190600960005260206000209060005b818110610e4b576102c5856102b9818703826111d2565b8254845260209093019260019283019201610e34565b346101be5760003660031901126101be576020600c54604051908152f35b346101be5760203660031901126101be57600435610e9b611551565b610ea36113d5565b600581101561058a5760048114908115610f39575b50610f2857806000526010602052600260406000200160ff198154169055600a54600160401b811015610bce5781610f1f7f9ad2ca3ec51dc768a93a3a6f7b5778dd0e5f4d4ba47a19df55a0a9a325bcdecb9361089684600160209601600a55600a611375565b604051908152a1005b636edabdcf60e01b60005260046000fd5b600391501482610eb8565b346101be5760003660031901126101be576020600b54604051908152f35b346101be5760203660031901126101be576001600160a01b03610f836110ce565b16600052600f6020526020604060002054604051908152f35b346101be5760203660031901126101be57600435610fb86113d5565b600581101561058a576002036110bd57610fd181611446565b80516001600160a01b0316159081156110b0575b5061109c5733600052601160205260406000208160005260205260ff6040600020541661108b5760407fa36cc2bebb74db33e9f88110a07ef56e1b31b24b4c4f51b54b1664266e29f45b91336000526011602052816000208160005260205281600020600160ff1982541617905561105e6013546113c6565b6013558060005260106020526003826000200161107b81546113c6565b90558151903382526020820152a1005b631022d3b360e01b60005260046000fd5b637995743160e01b60005260045260246000fd5b6040915001511582610fe5565b63617150fd60e11b60005260046000fd5b600435906001600160a01b03821682036101be57565b602060408183019282815284518094520192019060005b8181106111085750505090565b82518452602093840193909201916001016110fb565b919082519283825260005b84811061114a575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201611129565b90600182811c9216801561118f575b602083101461117957565b634e487b7160e01b600052602260045260246000fd5b91607f169161116e565b610140810190811067ffffffffffffffff821117610bce57604052565b6080810190811067ffffffffffffffff821117610bce57604052565b90601f8019910116810190811067ffffffffffffffff821117610bce57604052565b60405190600082600154916112088361115f565b808352926001811690811561128e575060011461122e575b61122c925003836111d2565b565b506001600090815290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b81831061127257505090602061122c92820101611220565b602091935080600191548385890101520191019091849261125a565b6020925061122c94915060ff191682840152151560051b820101611220565b60405190600082600254916112c18361115f565b808352926001811690811561128e57506001146112e45761122c925003836111d2565b506002600090815290917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b81831061132857505090602061122c92820101611220565b6020919350806001915483858901015201910190918492611310565b60095481101561135f57600960005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b805482101561135f5760005260206000200190600090565b91908203918211610b4e57565b67ffffffffffffffff8111610bce5760051b60200190565b805182101561135f5760209160051b010190565b6000198114610b4e5760010190565b60ff6012541661144157600354421061143c576004544211156114375760045442118061142b575b8061141f575b61141a57600654421161141557600090565b600490565b600290565b50600654421115611403565b506005544210156113fd565b600190565b600090565b600390565b60006060604051611456816111b6565b82815281602082015282604082015201526000526010602052604060002090604051611481816111b6565b82546001600160a01b0316815260405160018401805460009592916114a58261115f565b808452916001811690811561152a57506001146114ed575b50506114cf81600394959603826111d2565b602084015260ff600282015416151560408401520154606082015290565b90955060005260206000206000905b8682106115145750810160200194506114cf816114bd565b60018160209254838587010152019101906114fc565b60ff191660208086019190915292151560051b840190920196506114cf91508290506114bd565b6000546001600160a01b0316330361156557565b63118cdaa760e01b6000523360045260246000fd5b908060209392818452848401376000828201840152601f01601f191601019056fea2646970667358221220957b25c49b43705132dce9cb06d305d6f69b12a795b6771456b645a40dadac8664736f6c634300081a0033",
    "sourceMap": "380:13081:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;-1:-1:-1;;;;;380:13081:28;;:::i;:::-;;;;11010:10;380:13081;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;:::i;:::-;1500:62:24;;:::i;:::-;-1:-1:-1;;;;;380:13081:28;2627:22:24;;2623:91;;380:13081:28;;;-1:-1:-1;;;;;;380:13081:28;;;;;;-1:-1:-1;;;;;380:13081:28;;3052:40:24;;380:13081:28;3052:40:24;380:13081:28;2623:91:24;2672:31;;;380:13081:28;2672:31:24;380:13081:28;;;;;2672:31:24;380:13081:28;;;;;;-1:-1:-1;;380:13081:28;;;;;1682:27;380:13081;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;7632:17;380:13081;;7631:18;7627:84;;380:13081;;7727:17;380:13081;;;;;;;;7727:17;380:13081;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7627:84;7672:28;;;380:13081;7672:28;380:13081;;7672:28;380:13081;;;;;;-1:-1:-1;;380:13081:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;1135:32;380:13081;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;1103:26;380:13081;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;380:13081:28;;;;;;1652:24;380:13081;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;1174:30;380:13081;1174:30;;;;;;380:13081;1174:30;;:::i;:::-;380:13081;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;957:31;380:13081;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;9470:17;380:13081;;;;;;;;9470:17;380:13081;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;1500:62:24;;:::i;:::-;380:13081:28;;;-1:-1:-1;;;;;;380:13081:28;;;;-1:-1:-1;;;;;380:13081:28;3052:40:24;380:13081:28;;3052:40:24;380:13081:28;;;;;;;-1:-1:-1;;380:13081:28;;;;;1067:30;380:13081;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;1383:29;380:13081;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;1029:32;380:13081;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;1258:34;380:13081;1258:34;;;;;380:13081;1258:34;;380:13081;;;;;;;;1258:34;380:13081;;;;;;;;;;;;;-1:-1:-1;;;380:13081:28;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11824:18;;:::i;:::-;380:13081;;;;;;11866:33;11856:43;11852:114;;12004:10;380:13081;;11980:23;380:13081;;;;;;12019:26;380:13081;11980:65;;;;11976:158;;380:13081;12149:47;:13;380:13081;12172:17;380:13081;12149:47;;:::i;:::-;12201:17;380:13081;12148:70;;;;12144:162;;380:13081;;;;11445:32;;12004:10;;380:13081;;;;;;;11445:32;380:13081;;;;;;;;:::i;:::-;11445:32;380:13081;;11445:32;;;;;;:::i;:::-;380:13081;11435:43;;380:13081;;;;12386:7;380:13081;;;12386:23;380:13081;;;12386:23;380:13081;;12382:90;;380:13081;;;;;:::i;:::-;12004:10;380:13081;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12501:93;;380:13081;;;;12501:93;;11866:33;380:13081;;;12501:93;;380:13081;;;;;;;12386:7;380:13081;;;;;;;;;;;;;;;;;;;;;;;11866:33;380:13081;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11866:33;380:13081;;;;;;;;;;;;;;12386:23;380:13081;;;;;;;;;;;;;;;;;;;;;12004:10;380:13081;;11980:23;380:13081;;;;;12605:37;380:13081;;12605:37;:::i;:::-;380:13081;;12149:13;380:13081;;-1:-1:-1;;;380:13081:28;;;;;;;12695:53;380:13081;;;;;11866:33;380:13081;;;12149:13;380:13081;12149:13;380:13081;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12004:10;380:13081;;;;;;;;;;;;;;:::i;:::-;12695:53;;;380:13081;;;;;;;-1:-1:-1;;;380:13081:28;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;;;;;;11866:33;380:13081;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;;;;;;;;;;;;;;11866:33;380:13081;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11866:33;380:13081;;;;;;-1:-1:-1;380:13081:28;;;;;-1:-1:-1;;;380:13081:28;;;;;;;;12382:90;12432:29;;;380:13081;12432:29;380:13081;;12432:29;12144:162;12241:54;;;380:13081;12241:54;380:13081;;;;12241:54;11976:158;12068:55;;;380:13081;12068:55;380:13081;;;;12068:55;11852:114;11922:33;;;380:13081;11922:33;380:13081;;11922:33;380:13081;;;;;;-1:-1:-1;;380:13081:28;;;;5952:18;;:::i;:::-;380:13081;;;;;;;5984:29;5980:93;;380:13081;6087:17;380:13081;;6083:88;;6204:13;380:13081;6204:47;6227:17;380:13081;6204:47;;:::i;:::-;380:13081;6281:17;380:13081;6266:32;;;6262:97;;380:13081;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;380:13081:28;;;:::i;:::-;;;;;;;;6553:13;;6568:24;;;;;;6880:13;;380:13081;6875:381;6920:3;-1:-1:-1;;380:13081:28;;;;;;;6895:23;;;;;380:13081;6988:3;6963:19;;;;:::i;:::-;-1:-1:-1;;380:13081:28;;;;;;;6959:27;;;;;7023:17;;;;:::i;:::-;380:13081;;;6665:7;380:13081;;;;;;7015:40;380:13081;;;;;;;;;;;7066:21;;;;;:::i;:::-;380:13081;;;6665:7;380:13081;;;;;;7058:44;380:13081;-1:-1:-1;7011:221:28;;6988:3;;380:13081;6944:13;;7011:221;380:13081;7126:87;7172:21;;;;:::i;:::-;380:13081;7195:17;;;;;:::i;:::-;380:13081;;7126:87;;;:::i;:::-;380:13081;7126:87;;;;:::i;:::-;380:13081;7011:221;;;380:13081;;;;;;;;;;;;6959:27;;;380:13081;;6880:13;;;6895:23;;;-1:-1:-1;7315:35:28;;;;;;7314:75;;;380:13081;7419:15;;;;;;6087:17;380:13081;;-1:-1:-1;;380:13081:28;;;;;;7436:3;7478:17;;;;:::i;:::-;380:13081;;7455:17;380:13081;-1:-1:-1;;;380:13081:28;;;;;;;;;;;;;7455:17;380:13081;7455:17;380:13081;:::i;:::-;;7404:13;;380:13081;;;;;;;;;;;;7314:75;;;;;;6594:3;6631:16;;;:::i;:::-;380:13081;;;;;;;;;6665:7;380:13081;;;6665:23;380:13081;;;6665:23;380:13081;;6661:138;;6594:3;;380:13081;;6553:13;;6661:138;6708:41;6767:17;6708:41;;380:13081;6708:41;;;;:::i;:::-;380:13081;6767:17;:::i;:::-;6661:138;;;;6262:97;6321:27;;;380:13081;6321:27;380:13081;;6321:27;6083:88;6127:33;;;380:13081;6127:33;380:13081;;6127:33;5980:93;6036:26;;;380:13081;6036:26;380:13081;;6036:26;380:13081;;;;;;-1:-1:-1;;380:13081:28;;;;1500:62:24;;:::i;:::-;4836:12:28;380:13081;;;;4832:76;;-1:-1:-1;;380:13081:28;4932:4;380:13081;4836:12;380:13081;;4832:76;4871:26;;;380:13081;4871:26;380:13081;;4871:26;380:13081;;;;;;-1:-1:-1;;380:13081:28;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10079:16;380:13081;;;10168:17;380:13081;10214:15;380:13081;;;;;;10254:11;380:13081;;10296:17;380:13081;;10353:26;380:13081;;10405:12;380:13081;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;9966:462;;;;380:13081;;;;9966:462;;380:13081;;;;9966:462;;380:13081;;;;9966:462;;380:13081;;;;9966:462;;380:13081;;;;9966:462;;380:13081;;;;9966:462;;380:13081;;;;9966:462;;380:13081;;;;9966:462;;380:13081;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;380:13081:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;10885:13;380:13081;;;;;;;;10885:13;380:13081;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;1345:32;380:13081;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;1500:62:24;;:::i;:::-;5567:18:28;;:::i;:::-;380:13081;;;;;;;5599:29;;:65;;;;;380:13081;5595:158;;;380:13081;;;5763:7;380:13081;;5763:23;380:13081;;;5763:23;380:13081;;;;;;;5804:17;380:13081;-1:-1:-1;;;380:13081:28;;;;;;;5850:21;380:13081;;;;;;;5804:17;380:13081;5804:17;380:13081;:::i;:::-;;;;;;5850:21;380:13081;5595:158;5687:55;;;380:13081;5687:55;380:13081;;5687:55;5599:65;5642:22;380:13081;;5632:32;5599:65;;;380:13081;;;;;;-1:-1:-1;;380:13081:28;;;;;1298:41;380:13081;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;-1:-1:-1;;;;;380:13081:28;;:::i;:::-;;;;1460:58;380:13081;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;12859:18;;:::i;:::-;380:13081;;;;;;12901:27;12891:37;12887:102;;13031:17;;;:::i;:::-;380:13081;;-1:-1:-1;;;;;380:13081:28;13062:31;;:48;;;;380:13081;13058:125;;;13208:10;380:13081;;13197:10;380:13081;;;;;;;;;;;;;;;;13193:100;;380:13081;13423:29;13208:10;;380:13081;;13197:10;380:13081;;;;;;;;;;;;;;;;;;;;;;13351:14;;380:13081;13351:14;:::i;:::-;;380:13081;;;;13375:7;380:13081;;13375:30;380:13081;;;13375:30;:32;380:13081;;13375:32;:::i;:::-;380:13081;;;;13208:10;;380:13081;;;;;;13423:29;380:13081;13193:100;13251:31;;;380:13081;13251:31;380:13081;;13251:31;13058:125;13133:39;;;380:13081;13133:39;380:13081;;;;13133:39;13062:48;380:13081;13098:12;;;380:13081;;13062:48;;;12887:102;12951:27;;;380:13081;12951:27;380:13081;;12951:27;380:13081;;;;-1:-1:-1;;;;;380:13081:28;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;380:13081:28;10002:7;380:13081;;;;;:::i;:::-;;;;;10002:7;380:13081;;;10002:7;;;;380:13081;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;10002:7:28;-1:-1:-1;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10002:7;380:13081;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;10036:13;380:13081;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10036:13:28;-1:-1:-1;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6204:13;380:13081;;;;;;6204:13;-1:-1:-1;380:13081:28;;-1:-1:-1;380:13081:28;;;-1:-1:-1;380:13081:28;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;-1:-1:-1;380:13081:28;;;-1:-1:-1;380:13081:28;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;380:13081:28;;;;;;;:::o;8031:1026::-;380:13081;8109:12;380:13081;;8105:72;;8209:16;380:13081;8191:15;:34;8187:125;;8384:14;380:13081;8191:15;8365:33;;8322:187;;8384:14;380:13081;8191:15;8536:32;:72;;;8031:1026;8536:126;;;8031:1026;8519:235;;8786:15;380:13081;8191:15;8768:33;8764:135;;380:13081;8031:1026;:::o;8764:135::-;8384:14;8817:26;:::o;8519:235::-;8694:27;8687:34;:::o;8536:126::-;380:13081;8647:15;380:13081;8191:15;8628:34;;8536:126;;:72;380:13081;8591:17;380:13081;8191:15;8572:36;;8536:72;;8322:187;8326:35;8414:40;:::o;8187:125::-;380:13081;8241:29;:::o;8105:72::-;8144:22;8137:29;:::o;7757:127::-;-1:-1:-1;380:13081:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;7861:7;380:13081;;;-1:-1:-1;380:13081:28;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;380:13081:28;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7757:127;:::o;380:13081::-;;;;-1:-1:-1;380:13081:28;;-1:-1:-1;380:13081:28;-1:-1:-1;380:13081:28;;;;;;;-1:-1:-1;380:13081:28;;;;;-1:-1:-1;380:13081:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:13081:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;-1:-1:-1;380:13081:28;;-1:-1:-1;380:13081:28;;1796:162:24;1710:6;380:13081:28;-1:-1:-1;;;;;380:13081:28;735:10:25;1855:23:24;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:25;1901:40:24;380:13081:28;;1710:6:24;1901:40;380:13081:28;;;;;;;;;;;;;-1:-1:-1;380:13081:28;;;;;;;;-1:-1:-1;;380:13081:28;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancelContest()": "1db0e667",
    "computeWinners()": "221705ea",
    "deleteEntry(uint256)": "11f7516c",
    "getAllEntryIds()": "1b9efecd",
    "getContestDetails()": "1d19a7cb",
    "getContestStatus()": "6989641c",
    "getDeletedEntryIDs()": "7bd37dfc",
    "getEntry(uint256)": "bae78d7b",
    "getHasVoted(address,uint256)": "f40d6c1c",
    "getWinners()": "df15c37e",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "s_allEntryIds(uint256)": "8f97094c",
    "s_deletedEntryIds(uint256)": "54ab50b1",
    "s_description()": "4ef89719",
    "s_entryEndTime()": "aefaca7f",
    "s_entryStartTime()": "7f80667e",
    "s_isCanceled()": "922ce146",
    "s_maxEntriesPerParticipant()": "0eeb67a1",
    "s_maxTotalEntries()": "ba9b9758",
    "s_numberOfWinners()": "1366e200",
    "s_organizer()": "9c242094",
    "s_participantEntryCount(address)": "057c106c",
    "s_title()": "99a8502d",
    "s_totalVotes()": "e02c3009",
    "s_votingEndTime()": "6be7455d",
    "s_votingStartTime()": "56c106b8",
    "s_winnersComputed()": "67787a51",
    "submitEntry(string)": "2b00cd64",
    "transferOwnership(address)": "f2fde38b",
    "vote(uint256)": "0121b93f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"entryStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEndTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxEntriesPerParticipant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalEntries\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfWinners\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Contest__AlreadyCanceled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__AlreadyVotedForEntry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__CannotDeleteEntryAfterContestEndedOrCanceled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__ContestNotEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__EntryAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numAllowedEntrySubmissions\",\"type\":\"uint256\"}],\"name\":\"Contest__ExceededEntryLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTotalEntries\",\"type\":\"uint256\"}],\"name\":\"Contest__ExceededTotalMaxEntryLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entryId\",\"type\":\"uint256\"}],\"name\":\"Contest__InvalidOrDeletedEntry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__NotEnoughEntries\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__NotInVotingPhase\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__NotOpenForParticipants\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__NotOrganizer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__WinnerNotComputed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Contest__WinnersAlreadyComputed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Contest__ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"entry\",\"type\":\"string\"}],\"name\":\"Contest__EntrySubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryId\",\"type\":\"uint256\"}],\"name\":\"EntryDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryId\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelContest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entryId\",\"type\":\"uint256\"}],\"name\":\"deleteEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllEntryIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContestDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"entryStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEndTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalEntries\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxEntriesPerParticipant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct Contest.ContestDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContestStatus\",\"outputs\":[{\"internalType\":\"enum Contest.ContestStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeletedEntryIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entryId\",\"type\":\"uint256\"}],\"name\":\"getEntry\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numberOfVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct Contest.ParticipantEntry\",\"name\":\"entry\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"entryId\",\"type\":\"uint256\"}],\"name\":\"getHasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinners\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_allEntryIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_deletedEntryIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_entryEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_entryStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_isCanceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_maxEntriesPerParticipant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_maxTotalEntries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_numberOfWinners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_organizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_participantEntryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_votingEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_votingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_winnersComputed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"submitEntry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entryId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract is owned by the organizer and allows participants to submit entries during the entry period.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"cancelContest()\":{\"details\":\"Only the organizer can cancel the contest.\"},\"constructor\":{\"params\":{\"description\":\"A description of the contest.\",\"entryEndTime\":\"The end time for the entry period (Unix timestamp).\",\"entryStartTime\":\"The start time for the entry period (Unix timestamp).\",\"maxEntriesPerParticipant\":\"The maximum number of entries a participant can submit.\",\"maxTotalEntries\":\"The maximum total number of entries allowed in the contest.\",\"organizer\":\"The address of the contest organizer.\",\"title\":\"The title of the contest.\",\"votingEndTime\":\"The end time for the voting period (Unix timestamp).\",\"votingStartTime\":\"The start time for the voting period (Unix timestamp).\"}},\"deleteEntry(uint256)\":{\"details\":\"Only the contract owner can delete entries.\",\"params\":{\"entryId\":\"The ID of the entry to delete.\"}},\"getAllEntryIds()\":{\"details\":\"This function returns an array of entry IDs, including both active and deleted entries. It can be used to get an overview of all entries ever submitted to the contest.\",\"returns\":{\"_0\":\"An array of `uint256` representing the IDs of all entries.\"}},\"getContestDetails()\":{\"returns\":{\"_0\":\"A `ContestDetails` struct with the contest's title, description, entry/voting timeframes,organizer, maximium total entries, maximium entries per participant and total votes.\"}},\"getContestStatus()\":{\"returns\":{\"_0\":\"The current status as a `ContestStatus` enum value.\"}},\"getDeletedEntryIDs()\":{\"details\":\"This function returns an array of entry IDs that have been marked as deleted. It can be useful for tracking entries that have been removed.\",\"returns\":{\"_0\":\"An array of `uint256` representing the IDs of deleted entries.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitEntry(string)\":{\"params\":{\"content\":\"The content of the entry.\"},\"returns\":{\"_0\":\"The ID of the submitted entry.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Contest Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelContest()\":{\"notice\":\"Cancels the contest, preventing further actions.\"},\"constructor\":{\"notice\":\"Initializes the Contest contract with the given parameters.\"},\"deleteEntry(uint256)\":{\"notice\":\"Deletes an entry by its ID.\"},\"getAllEntryIds()\":{\"notice\":\"Retrieves the list of IDs for all entries submitted to the contest.\"},\"getContestDetails()\":{\"notice\":\"Retrieves the contest details including title, description, timings, organizer, maximium total entries, maximium entries per participant and total votes.\"},\"getContestStatus()\":{\"notice\":\"Returns the current status of the contest.\"},\"getDeletedEntryIDs()\":{\"notice\":\"Retrieves the list of IDs for all deleted entries.\"},\"submitEntry(string)\":{\"notice\":\"Submits an entry for the contest.\"}},\"notice\":\"This contract manages a contest with an entry period, voting period, and participant entries.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/Contest.sol\":{\"keccak256\":\"0xc58b068e75d706964e7bad12233afa6fb75e3f78d35e0c10d2ef57920bde159e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca22fb1e20d58e6be7803bd4a1e2ff50b9eeb70b8b5eedcef07c6c23a94013a0\",\"dweb:/ipfs/QmWEUivja9ZQZkv8YKDatsXjnD65KpFc3353YeL5LQoCH8\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "string", "name": "title", "type": "string" },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "entryStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "entryEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingEndTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "organizer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxEntriesPerParticipant",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTotalEntries",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numberOfWinners",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "Contest__AlreadyCanceled" },
        {
          "inputs": [],
          "type": "error",
          "name": "Contest__AlreadyVotedForEntry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Contest__CannotDeleteEntryAfterContestEndedOrCanceled"
        },
        { "inputs": [], "type": "error", "name": "Contest__ContestNotEnded" },
        {
          "inputs": [],
          "type": "error",
          "name": "Contest__EntryAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numAllowedEntrySubmissions",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Contest__ExceededEntryLimit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalEntries",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Contest__ExceededTotalMaxEntryLimit"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "entryId", "type": "uint256" }
          ],
          "type": "error",
          "name": "Contest__InvalidOrDeletedEntry"
        },
        { "inputs": [], "type": "error", "name": "Contest__NotEnoughEntries" },
        { "inputs": [], "type": "error", "name": "Contest__NotInVotingPhase" },
        {
          "inputs": [],
          "type": "error",
          "name": "Contest__NotOpenForParticipants"
        },
        { "inputs": [], "type": "error", "name": "Contest__NotOrganizer" },
        { "inputs": [], "type": "error", "name": "Contest__WinnerNotComputed" },
        {
          "inputs": [],
          "type": "error",
          "name": "Contest__WinnersAlreadyComputed"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "Contest__ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entryId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "participant",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "entry",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Contest__EntrySubmitted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entryId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EntryDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "entryId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelContest"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "computeWinners"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "entryId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteEntry"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllEntryIds",
          "outputs": [
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getContestDetails",
          "outputs": [
            {
              "internalType": "struct Contest.ContestDetails",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "title", "type": "string" },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "entryStartTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "entryEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingStartTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "organizer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTotalEntries",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxEntriesPerParticipant",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getContestStatus",
          "outputs": [
            {
              "internalType": "enum Contest.ContestStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeletedEntryIDs",
          "outputs": [
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "entryId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntry",
          "outputs": [
            {
              "internalType": "struct Contest.ParticipantEntry",
              "name": "entry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "participant",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "content",
                  "type": "string"
                },
                { "internalType": "bool", "name": "exists", "type": "bool" },
                {
                  "internalType": "uint256",
                  "name": "numberOfVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "voter", "type": "address" },
            { "internalType": "uint256", "name": "entryId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHasVoted",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWinners",
          "outputs": [
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "s_allEntryIds",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "s_deletedEntryIds",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_description",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_entryEndTime",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_entryStartTime",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_isCanceled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_maxEntriesPerParticipant",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_maxTotalEntries",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_numberOfWinners",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_organizer",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "s_participantEntryCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_title",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_totalVotes",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_votingEndTime",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_votingStartTime",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_winnersComputed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "string", "name": "content", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitEntry",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "entryId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "vote"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cancelContest()": {
            "details": "Only the organizer can cancel the contest."
          },
          "constructor": {
            "params": {
              "description": "A description of the contest.",
              "entryEndTime": "The end time for the entry period (Unix timestamp).",
              "entryStartTime": "The start time for the entry period (Unix timestamp).",
              "maxEntriesPerParticipant": "The maximum number of entries a participant can submit.",
              "maxTotalEntries": "The maximum total number of entries allowed in the contest.",
              "organizer": "The address of the contest organizer.",
              "title": "The title of the contest.",
              "votingEndTime": "The end time for the voting period (Unix timestamp).",
              "votingStartTime": "The start time for the voting period (Unix timestamp)."
            }
          },
          "deleteEntry(uint256)": {
            "details": "Only the contract owner can delete entries.",
            "params": { "entryId": "The ID of the entry to delete." }
          },
          "getAllEntryIds()": {
            "details": "This function returns an array of entry IDs, including both active and deleted entries. It can be used to get an overview of all entries ever submitted to the contest.",
            "returns": {
              "_0": "An array of `uint256` representing the IDs of all entries."
            }
          },
          "getContestDetails()": {
            "returns": {
              "_0": "A `ContestDetails` struct with the contest's title, description, entry/voting timeframes,organizer, maximium total entries, maximium entries per participant and total votes."
            }
          },
          "getContestStatus()": {
            "returns": {
              "_0": "The current status as a `ContestStatus` enum value."
            }
          },
          "getDeletedEntryIDs()": {
            "details": "This function returns an array of entry IDs that have been marked as deleted. It can be useful for tracking entries that have been removed.",
            "returns": {
              "_0": "An array of `uint256` representing the IDs of deleted entries."
            }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "submitEntry(string)": {
            "params": { "content": "The content of the entry." },
            "returns": { "_0": "The ID of the submitted entry." }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancelContest()": {
            "notice": "Cancels the contest, preventing further actions."
          },
          "constructor": {
            "notice": "Initializes the Contest contract with the given parameters."
          },
          "deleteEntry(uint256)": { "notice": "Deletes an entry by its ID." },
          "getAllEntryIds()": {
            "notice": "Retrieves the list of IDs for all entries submitted to the contest."
          },
          "getContestDetails()": {
            "notice": "Retrieves the contest details including title, description, timings, organizer, maximium total entries, maximium entries per participant and total votes."
          },
          "getContestStatus()": {
            "notice": "Returns the current status of the contest."
          },
          "getDeletedEntryIDs()": {
            "notice": "Retrieves the list of IDs for all deleted entries."
          },
          "submitEntry(string)": {
            "notice": "Submits an entry for the contest."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Contest.sol": "Contest" },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0xc58b068e75d706964e7bad12233afa6fb75e3f78d35e0c10d2ef57920bde159e",
        "urls": [
          "bzz-raw://ca22fb1e20d58e6be7803bd4a1e2ff50b9eeb70b8b5eedcef07c6c23a94013a0",
          "dweb:/ipfs/QmWEUivja9ZQZkv8YKDatsXjnD65KpFc3353YeL5LQoCH8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 28
}
